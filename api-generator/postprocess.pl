#! /usr/bin/perl

#
# only collect the generated types, not all the other useless clutter, and put it all in ONE file
#

$package = $ARGV[0];

print "// Code generated by OpenAPI Generator (https://openapi-generator.tech); then postprocessed; DO NOT EDIT.\n\n";
print "package $package\n\n";

print "import \"time\"\n\n" if $package eq "openapi";

my $enabled = 0;
my $replaceYaml = 0;
while (my $line = <STDIN>) {
    $line =~ s/\n//g;
    $line =~ s/\r//g;

    if ($line =~ /^type Nullable/) {
        # ignore
    } elsif ($line =~ /^type /) {
        $enabled = 1;
        if ($line =~ /^type (OwnerDto|Quicklink|RepositoryDto|ServiceDto|RepositoryConfigurationDto|RepositoryConfigurationAccessKeyDto|RepositoryConfigurationWebhooksDto|RepositoryConfigurationWebhookDto|ConditionReferenceDto) struct/) {
            $replaceYaml = 1;
        }
        print $line."\n";
    } elsif ($line =~ /^}$/) {
        print $line."\n\n" if $enabled;
        $enabled = 0;
        $replaceYaml = 0;
    } elsif ($enabled) {
        if ($replaceYaml and ($line =~ /`json:\"([^\"]+)\"`/)) {
            my $jsonSpec = $1;
            # we do not represent the timeStamp/commitHash in yaml -- git holds this metadata in the commit history
            if (($jsonSpec eq "timeStamp") or ($jsonSpec eq "commitHash") or ($jsonSpec eq "owner") or ($jsonSpec eq "jiraIssue")) {
                $line =~ s/`json:\"([^\"]+)\"`/`json:\"$1\" yaml:\"-\"`/; # - leaves a field out
            } else {
                $line =~ s/`json:\"([^\"]+)\"`/`json:\"$1\" yaml:\"$1\"`/;
            }
        }
        print $line."\n";
    }
}
